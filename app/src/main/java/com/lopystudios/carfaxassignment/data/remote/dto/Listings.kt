package com.lopystudios.carfaxassignment.data.remote.dto

import com.lopystudios.carfaxassignment.domain.model.Car

data class Listings(
    val accidentHistory: AccidentHistory,
    val advantage: Boolean,
    val atomOtherOptions: List<String>,
    val atomTopOptions: List<String>,
    val backfill: Boolean,
    val badge: String,
    val bedLength: String,
    val bodytype: String,
    val cabType: String,
    val certified: Boolean,
    val currentPrice: Int,
    val dealer: Dealer,
    val dealerType: String,
    val displacement: String,
    val distanceToDealer: Double,
    val drivetype: String,
    val engine: String,
    val exteriorColor: String,
    val firstSeen: String,
    val followCount: Int,
    val followedAt: Long,
    val following: Boolean,
    val fuel: String,
    val hasViewed: Boolean,
    val id: String,
    val imageCount: Int,
    val images: Images,
    val interiorColor: String,
    val isEnriched: Boolean,
    val isOemPromoted: Boolean,
    val isOemRefundFlag: Boolean,
    val listPrice: Int,
    val listingStatus: String,
    val make: String,
    val mileage: Int,
    val model: String,
    val monthlyPaymentEstimate: MonthlyPaymentEstimate,
    val mpgCity: Int,
    val mpgHighway: Int,
    val noAccidents: Boolean,
    val oneOwner: Boolean,
    val onePrice: Int,
    val onePriceArrows: List<OnePriceArrow>,
    val onlineOnly: Boolean,
    val ownerHistory: OwnerHistory,
    val personalUse: Boolean,
    val placed: Boolean,
    val recordType: String,
    val sentLead: Boolean,
    val serviceHistory: ServiceHistory,
    val serviceRecords: Boolean,
    val sortScore: Double,
    val stockNumber: String,
    val subTrim: String,
    val topOptions: List<String>,
    val tpCostPerVdp: Double,
    val tpEligible: Boolean,
    val transmission: String,
    val trim: String,
    val vdpUrl: String,
    val vehicleCondition: String,
    val vehicleUseHistory: VehicleUseHistory,
    val vin: String,
    val windowSticker: String,
    val year: Int
)

fun Listings.toCar(): Car {
    return Car(
        photoUrl = images.firstPhoto.large,
        year = year,
        make = make,
        model = model,
        trim = trim,
        price = currentPrice,
        mileage = mileage,
        city = dealer.city,
        state = dealer.state,
        dealerPhoneNumber = dealer.phone,
        interiorColor = interiorColor,
        exteriorColor = exteriorColor,
        driveType = drivetype,
        transmission = transmission,
        engine = engine,
        bodyStyle = bodytype,
        fuel = fuel
    )
}